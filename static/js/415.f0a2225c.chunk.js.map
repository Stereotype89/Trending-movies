{"version":3,"file":"static/js/415.f0a2225c.chunk.js","mappings":"qNAEaA,EAAYC,EAAAA,GAAAA,IAAH,sOAUTC,EAAcD,EAAAA,GAAAA,IAAH,iSAeXE,EAAYF,EAAAA,GAAAA,GAAH,4CAITG,EAAeH,EAAAA,GAAAA,EAAH,2C,SCzBlB,SAASI,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,SAAAC,GACV,OAAOA,EAAMC,aACX,UAACT,EAAD,YACE,UAAC,KAAD,CACEU,GAA0B,MAAtBL,EAASM,SAAT,iBAAsCH,EAAMI,IAA5C,UAAsDJ,EAAMI,IAChEC,MAAO,CAAEC,KAAMT,GAFjB,WAIE,gBACEU,IAAG,0CAAqCP,EAAMC,aAC9CO,IAAG,UAAKR,EAAMS,SAEhB,SAAChB,EAAD,UAAYO,EAAMU,qBAEpB,UAAChB,EAAD,4BAA6BM,EAAMW,kBAXnBX,EAAMI,IAatB,IACL,KAGN,C,0HCMD,UA3BA,WACE,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,GAAU,sBAFpB,gBAERC,EAFQ,EAERA,QACRN,EAAUM,GAHM,gDAKhBJ,EAAS,KAAMK,SACfC,EAAAA,GAAAA,MAAA,8BANgB,yDAAH,qDAUjBJ,GACD,GAAE,KAGD,iCACE,kDACmB,IAAlBrB,EAAO0B,SAAgB,SAAC,IAAD,CAAW1B,OAAQA,IAC1CkB,IAAS,SAAC,KAAD,CAAgBS,UAAW,QAG1C,C,6FC/BD,EAFgB,mCCIDL,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBM,GAAzB,gGAAqCC,EAArC,+BAA6C,GAAIC,EAAjD,+BAAuDC,EAAvD,SACyBC,EAAAA,EAAAA,IAAA,uCACWJ,EADX,oBACiCE,GADjC,OACuCD,GAC5D,CAAEI,iBAAiB,IAHvB,uBACUC,EADV,EACUA,KADV,kBAKSA,GALT,mEAQA,M,SARyB,GAAVZ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api-key.js","services/data-fetch-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 30px;\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n  grid-column-gap: 15px;\n  grid-row-gap: 15px;\n  color: var(--global-black-color);\n`;\n\nexport const LinkWrapper = styled.div`\n  // outline: 1px solid blue;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n\n  > a {\n    display: flex;\n    flex-direction: column;\n    text-decoration: none;\n    font-weight: 500;\n    color: var(--global-black-color);\n  }\n`;\n\nexport const MovieName = styled.h6`\n  margin-top: 5px;\n`;\n\nexport const MovieRelease = styled.p`\n  font-size: 8px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { Container, LinkWrapper, MovieName, MovieRelease } from './MoviesList.styled';\n\nexport function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <Container>\n      {movies.map(movie => {\n        return movie.poster_path ? (\n          <LinkWrapper key={movie.id}>\n            <Link\n              to={location.pathname === '/' ? `movies/${movie.id}` : `${movie.id}`}\n              state={{ from: location }}\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/w154/${movie.poster_path}`}\n                alt={`${movie.name}`}\n              />\n              <MovieName>{movie.original_title}</MovieName>\n            </Link>\n            <MovieRelease>Release date: {movie.release_date}</MovieRelease>\n          </LinkWrapper>\n        ) : null;\n      })}\n    </Container>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport fetchData from 'services/data-fetch-api';\nimport { MovieList } from 'components/MoviesList/MoviesList';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getTrending = async () => {\n      try {\n        const { results } = await fetchData('trending/movie/day');\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n        toast.error(`Fetch error: ${error}`);\n      }\n    };\n\n    getTrending();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending movies today</h1>\n      {movies.length !== 0 && <MovieList movies={movies} />}\n      {error && <ToastContainer autoClose={3000} />}\n    </>\n  );\n}\n\nexport default Home;\n","const API_KEY = '2146ba70e3259479566e1b682a61e224';\n\nexport default API_KEY;\n","import axios from 'axios';\n\nimport API_KEY from './api-key';\n\nasync function fetchData(parameters, query = '', key = API_KEY) {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/${parameters}?api_key=${key}${query}`,\n    { withCredentials: false }\n  );\n  return data;\n}\n\nexport default fetchData;\n"],"names":["Container","styled","LinkWrapper","MovieName","MovieRelease","MovieList","movies","location","useLocation","map","movie","poster_path","to","pathname","id","state","from","src","alt","name","original_title","release_date","useState","setMovies","error","setError","useEffect","getTrending","fetchData","results","message","toast","length","autoClose","parameters","query","key","API_KEY","axios","withCredentials","data"],"sourceRoot":""}