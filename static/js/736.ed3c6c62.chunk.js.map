{"version":3,"file":"static/js/736.ed3c6c62.chunk.js","mappings":"uRAEaA,EAAYC,EAAAA,GAAAA,IAAH,kKAaTC,EAAWD,EAAAA,GAAAA,GAAH,8NAWRE,EAAWF,EAAAA,GAAAA,GAAH,6Q,iBCuBrB,MAxCA,WACE,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEOC,EAAAA,EAAAA,GAAU,UAAD,OAAWT,EAAX,aAFhB,gBAERG,EAFQ,EAERA,KACRC,EAAQD,GAHQ,gDAKhBG,EAAS,KAAMI,SACfC,EAAAA,GAAAA,MAAA,8BANgB,yDAAH,qDASjBH,GACD,GAAE,CAACR,KAGF,UAACJ,EAAD,WACGS,IAAS,SAAC,KAAD,CAAgBO,UAAW,OACrC,kCACA,SAACd,EAAD,UACGK,EAAKU,KAAI,SAAAC,GACR,OAAOA,EAAMC,cACX,UAAChB,EAAD,YACE,gBACEiB,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAG,UAAKH,EAAMI,SAEhB,wBAAKJ,EAAMI,QACX,uCAAeJ,EAAMK,eANRL,EAAMM,IAQnB,IACL,QAIR,C,6FC7CD,EAFgB,mCCIDX,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBY,GAAzB,gGAAqCC,EAArC,+BAA6C,GAAIC,EAAjD,+BAAuDC,EAAvD,SACyBC,EAAAA,EAAAA,IAAA,uCACWJ,EADX,oBACiCE,GADjC,OACuCD,GAC5D,CAAEI,iBAAiB,IAHvB,uBACUC,EADV,EACUA,KADV,kBAKSA,GALT,mEAQA,M,SARyB,GAAVlB,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api-key.js","services/data-fetch-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 10px;\n  padding-top: 20px;\n\n  > h2 {\n    margin-bottom: 10px;\n  }\n\n  > p {\n    color: var(--global-black-color);\n  }\n`;\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(9, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n  grid-column-gap: 15px;\n  grid-row-gap: 15px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  // justify-content: space-between;\n\n  > h4 {\n    margin-top: 5px;\n    color: var(--global-black-color);\n  }\n\n  > p {\n    margin-top: 10px;\n    font-size: 12px;\n    font-weight: 500;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Container, CastList, CastItem } from './Cast.styled';\nimport fetchData from 'services/data-fetch-api';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCastData = async () => {\n      try {\n        const { cast } = await fetchData(`/movie/${movieId}/credits`);\n        setCast(cast);\n      } catch (error) {\n        setError(error.message);\n        toast.error(`Fetch error: ${error}`);\n      }\n    };\n    getCastData();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {error && <ToastContainer autoClose={3000} />}\n      <h2>Cast</h2>\n      <CastList>\n        {cast.map(actor => {\n          return actor.profile_path ? (\n            <CastItem key={actor.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w154/${actor.profile_path}`}\n                alt={`${actor.name}`}\n              />\n              <h4>{actor.name}</h4>\n              <p>Character: {actor.character}</p>\n            </CastItem>\n          ) : null;\n        })}\n      </CastList>\n    </Container>\n  );\n}\n\nexport default Cast;\n","const API_KEY = '2146ba70e3259479566e1b682a61e224';\n\nexport default API_KEY;\n","import axios from 'axios';\n\nimport API_KEY from './api-key';\n\nasync function fetchData(parameters, query = '', key = API_KEY) {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/${parameters}?api_key=${key}${query}`,\n    { withCredentials: false }\n  );\n  return data;\n}\n\nexport default fetchData;\n"],"names":["Container","styled","CastList","CastItem","movieId","useParams","useState","cast","setCast","error","setError","useEffect","getCastData","fetchData","message","toast","autoClose","map","actor","profile_path","src","alt","name","character","id","parameters","query","key","API_KEY","axios","withCredentials","data"],"sourceRoot":""}